import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load dataset
df = pd.read_csv('house_data.csv')

# Feature and target selection
X = df[['bedrooms', 'bathrooms', 'sqft_living']]
y = df['price']

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Plot 1: Distribution of house prices
plt.figure(figsize=(8,6))
sns.histplot(df['price'], kde=True)
plt.title('Distribution of House Prices')
plt.xlabel('Price')
plt.ylabel('Frequency')
plt.show()

# Plot 2: Scatter plot - Sqft Living vs Price
plt.figure(figsize=(8,6))
plt.scatter(df['sqft_living'], df['price'], alpha=0.5)
plt.title('House Price vs Sqft Living')
plt.xlabel('Sqft Living')
plt.ylabel('Price')
plt.show()

# Plot 3: Predicted vs Actual Prices (Scatter Plot)
plt.figure(figsize=(8,6))
plt.scatter(y_test, y_pred, alpha=0.5)
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red')  # Line showing perfect prediction
plt.title('Actual vs Predicted Prices')
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.show()
